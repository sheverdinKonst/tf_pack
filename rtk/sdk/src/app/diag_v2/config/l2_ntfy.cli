//
// Copyright (C) 2009 Realtek Semiconductor Corp.
// All Rights Reserved.
//
// This program is the proprietary software of Realtek Semiconductor
// Corporation and/or its licensors, and only be used, duplicated,
// modified or distributed under the authorized license from Realtek.
//
// ANY USE OF THE SOFTWARE OTHER THAN AS AUTHORIZED UNDER
// THIS LICENSE OR COPYRIGHT LAW IS PROHIBITED.
//
// $Revision: 53852 $
// $Date: 2014-12-12 11:01:17 +0800 (Fri, 12 Dec 2014) $
//
// Purpose : Define diag shell commands for NIC.
//
// Feature : The file have include the following module and sub-modules
//           1) L2-Notification commands.
//

#ifdef CMD_L2_NTFY_GET_STATE
//L2-notification configuration
//get configuration
//L2-notification function state
l2-ntfy get state
#endif

#ifdef CMD_L2_NTFY_GET_BACK_PRESSURE_THRESHOLD
//L2-notification configuration
//get configuration
//back-pressure mechanism
//threshold
l2-ntfy get back-pressure threshold
#endif

#ifdef CMD_L2_NTFY_GET_TYPE_LINK_DOWN_FLUSH_SUSPEND_STATE
//L2-notification configuration
//get configuration
//L2-notification type configuration
//link-down flush
//suspend learn
//enable state configuration
l2-ntfy get type ( link-down-flush | suspend ) state
#endif

#ifdef CMD_L2_NTFY_GET_DEBUG_FLAG
//L2-notification configuration
//get configuration
//debug flag
l2-ntfy get debug-flag
#endif

#ifdef CMD_L2_NTFY_SET_STATE_ENABLE_DISABLE
//L2-notification configuration
//set configuration
//L2-notification function state
//enable function
//disable function
l2-ntfy set state ( enable | disable )
#endif

#ifdef CMD_L2_NTFY_SET_BACK_PRESSURE_THRESHOLD_THRESHOLD
//L2-notification configuration
//set configuration
//back-pressure mechanism
//threshold
//threshold value
l2-ntfy set back-pressure threshold <UINT:threshold>
#endif

#ifdef CMD_L2_NTFY_SET_TYPE_LINK_DOWN_FLUSH_SUSPEND_STATE_DISABLE_ENABLE
//L2-notification configuration
//set configuration
//L2-notification type configuration
//link-down flush
//suspend learn
//enable state configuration
//disable function
//enable function
l2-ntfy set type ( link-down-flush | suspend ) state ( disable | enable )
#endif

#ifdef CMD_L2_NTFY_RESET_DUMP_COUNTER
//L2-notification configuration
//reset configuration
//dump configuration
//counter
l2-ntfy ( reset | dump ) counter
#endif

#ifdef CMD_L2_NTFY_SET_DEBUG_FLAG_BITMASK
//L2-notification configuration
//set configuration
//debug flag
//flag value
l2-ntfy set debug-flag <UINT:bitmask>
#endif

#ifdef CMD_L2_NTFY_GET_DST
//L2-notification configuration
//get configuration
//L2-notification event destination
l2-ntfy get dst
#endif

#ifdef CMD_L2_NTFY_SET_DST_SEND_TO_LOCAL_SEND_TO_MASTER_NIC
//L2-notification configuration
//set configuration
//Destination of L2-notification event
//packet send to local CPU
//packet send to master CPU
//NIC mode
l2-ntfy set dst ( send-to-local | send-to-master | nic )
#endif

#ifdef CMD_L2_NTFY_GET_TYPE_TAG_STS_DABLK_SABLK_STATIC_DYNAMIC_HASH_FULL_STATE
//L2-notification configuration
//get configuration
//L2-notification type configuration
//tag status change include vid and priority
//da-block and sa-block entry
//static entry
//dynamic entry
//hash full
//enable state configuration
l2-ntfy get type ( tag-sts | dablk-sablk | static | dynamic | hash-full ) state
#endif

#ifdef CMD_L2_NTFY_SET_TYPE_TAG_STS_DABLK_SABLK_STATIC_DYNAMIC_HASH_FULL_STATE_DISABLE_ENABLE
//L2-notification configuration
//set configuration
//L2-notification type configuration
//tag status change include vid and priority
//da-block and sa-block entry
//static entry
//dynamic entry
//hash full
//enable state configuration
//disable function
//enable function
l2-ntfy set type ( tag-sts | dablk-sablk | static | dynamic | hash-full ) state ( disable | enable )
#endif

#ifdef CMD_L2_NTFY_GET_DMAC_SMAC
//L2-notification configuration
//get configuration
//DMAC in notification packet
//SMAC in notification packet
l2-ntfy get ( dmac | smac )
#endif

#ifdef CMD_L2_NTFY_SET_DMAC_SMAC_MAC
//L2-notification configuration
//set configuration
//DMAC in notification packet
//SMAC in notification packet
//MAC address
l2-ntfy set ( dmac | smac ) <MACADDR:mac>
#endif

#ifdef CMD_L2_NTFY_GET_MAGIC_NUM
//L2-notification configuration
//get configuration
//magic number in notification packet
l2-ntfy get magic-num
#endif

#ifdef CMD_L2_NTFY_SET_MAGIC_NUM_NUM
//L2-notification configuration
//set configuration
//magic number in notification packet
//magic number
l2-ntfy set magic-num <UINT:num>
#endif

