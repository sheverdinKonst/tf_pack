#!/usr/bin/env lua

---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by sheverdin.
--- DateTime: 3/18/24 12:26 PM
---

require "bit"
local tf  = require "tf_module"

local autorestart_module = {}

local errorCode = {
    { ERR_TEST_DISABLE, 0x00040, 5 },
    { ERR_TEST_LINK,    0x00004, 2 },
    { ERR_TEST_PING,    0x00008, 3 },
    { ERR_TEST_SPEED,   0x00010, 4 },
    { ERR_TIME_ALARM,   0x00020, 6 },
    { ERR_OK,           0x0,     1 },
}

local testTypeE =
{
    test_disable    = 0,
    test_link       = 1,
    test_ping       = 2,
    test_speed      = 3,
    test_time       = 4,
}

local arInfo =
{
    id         = "id",
    error_Code = "error_Code",
    test_type  = "test_type"
}

local function getUbusData()
    return tf.collectJsonTable("ubus call autorestart getStatus")
end

local function getAutorestartStatus(index)
    local jsonInfo = {}
    local arPoeStatus = {}
    local testType = 0
    jsonInfo  = getUbusData()
    arPoeStatus = jsonInfo.port[index]

    --print("--------------------------------------------")
    testType = tonumber(arPoeStatus[arInfo.test_type]) + 1
    local error_Code_in = arPoeStatus[arInfo.error_Code]
    local error_Code_local = tonumber(errorCode[testType][2])
    local error_Code_OK = tonumber(errorCode[6][2])

    --print("test_type  =         " .. testType)
    --print("errorCode[testType]  " .. errorCode[testType][2])
    --print("error_Code_in        " .. error_Code_in)
    --print("error_Code_local        " .. error_Code_local)
    --print("logic " .. tostring(bit.band(error_Code_in, error_Code_in)))
    local res = ""
    if (tonumber(bit.band(error_Code_in, error_Code_local)) == error_Code_local) then
        --print("id         = " .. arPoeStatus[arInfo.id])
        --print("error_Code = " .. arPoeStatus[arInfo.error_Code])
        --print("if 1")
        res = tostring(errorCode[testType][3])
    elseif (tonumber(error_Code_in) == error_Code_OK) then
        --print("if 12")
        res = tostring(errorCode[6][3])
    end
    --print("res = " .. res)
    return res
end

function autorestart_module.autorestartStatus(index)
    index = tonumber(index)
    local arData = ""
    arData = getAutorestartStatus(index)
    return arData
end

return autorestart_module

